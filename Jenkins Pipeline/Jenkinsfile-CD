@Library('github.com/ranjitaws2020/java-shared-library@pipeline') _

pipeline {
    agent any 
     environment {
        azcon = credentials('az_sp')
        IMAGE_NAME = 'javasampletomcat'
        IMAGE_TAG = '10'
        AKS_NAMESPACE = 'default'
        AKS_DEPLOYMENT_NAME = 'aks-deployment-name'
        acrLoginServer = 'myacr032023.azurecr.io'
    }
    tools {
        maven 'maven-home'
        jdk 'jdk8'
        
    }
    stages {
        stage('Pull the file off Nexus') {
            steps{
                  DownloadFromNexus()                    
            }
        }
         stage('Fetch Public IP') {
            steps {
                     FetchPublicIPOfVM()
                
            }
        }
        //stage ('Deploy on this Server') {
        //    steps{
        //        DeployToTomcat()
        //    }            
        //}
         stage('Deploy to AKS') {
            steps {
                script {
                bat label: '', script:"""
                    az login --service-principal -u $azcon_CLIENT_ID -p $azcon_CLIENT_SECRET -t $azcon_TENANT_ID
                    az account set --subscription $azcon_SUBSCRIPTION_ID
                    az aks get-credentials --resource-group aks_terraform_rg --name terraform-aks
                    kubectl create deployment aks-deployment-name --image=javasampletomcat:10 -n default
                    """

                    //Get deployment manifest file
                    def deploymentFile = readFile 'deployment'

                    //Replace the image tag with the ACR image tag
                    deploymentFile = deploymentFile.replaceAll('\\$ACR_LOGIN_SERVER', acrLoginServer)
                    deploymentFile = deploymentFile.replaceAll('\\$BUILD_NUMBER', env.BUILD_NUMBER)

                    // Apply Kubernetes deployment manifest file to AKS
                    bat label: '', script: """
                    echo ${deploymentFile} | kubectl apply -f - -n ${AKS_NAMESPACE}
                    """

                }
            }
        }
    }
}
