@Library('github.com/ranjitaws2020/java-shared-library@pipeline') _

pipeline {
    agent any
     environment {
        azcon = credentials('az_sp')
      }
    stages {  
        stage('Provision Infrastructure') {
            steps {
                bat label: '', script: """
                  set ARM_CLIENT_ID=$azcon_CLIENT_ID
                  set ARM_CLIENT_SECRET=$azcon_CLIENT_SECRET
                  set ARM_SUBSCRIPTION_ID=$azcon_SUBSCRIPTION_ID
                  set ARM_TENANT_ID=$azcon_TENANT_ID
                terraform -chdir=infra init -input=false
                terraform -chdir=infra plan -out=tfplan -input=false
                terraform -chdir=infra apply -input=false tfplan   
                """
            }
        }
        stage('Pull the file off Nexus') {
            steps {
                DownloadFromNexus()                  
            }
        }
        stage('Fetch Public IP') {
            steps {
                // fetch public IP of the VM using Azure CLI
                script {                
                powershell label: '', script: """
                az login --service-principal -u $azcon_CLIENT_ID -p $azcon_CLIENT_SECRET -t $azcon_TENANT_ID
                az vm list-ip-addresses --resource-group app-grp --name linuxvm > fetchpublicip.json
                (Get-Content fetchpublicip.json | ConvertFrom-Json).virtualMachine.network.publicIpAddresses.ipAddress > output.txt
                """              
                }
            }
        }
        stage('Deploy Artifact') {
              steps {
                    script {                           
                            ip = powershell label:'', script: 'Get-Content output.txt', returnStdout: true
                            // rest of the steps
                            remote = [:]
                            remote.name = 'linuxvm'
                            remote.user = 'linuxusr'
                            remote.password = 'Arati@2023M'
                            remote.allowAnyHosts = true
                            remote.host = ip
                            remote.host = remote.host.trim()
                          
                            sshCommand remote: remote, command: "sudo mkdir -p /temp && sudo chmod -R 777 /temp"
                            sshPut remote: remote, from: 'JavaMaven.war', into: '/temp'
                            sshPut remote: remote, from: 'dockerfile', into: '/temp'  
                            sshPut remote: remote, from: 'src', into: '/temp'
                            sshPut remote: remote, from: 'pom.xml', into: '/temp'
                            sshCommand remote: remote, command: "sudo docker build -t javasampletomcat:latest /temp"
                            sshCommand remote: remote, command: "cd /temp"
                            sshCommand remote: remote, command: "sudo usermod -aG docker linuxusr"
                            sshCommand remote: remote, command: "docker save javasampletomcat:latest | docker load"
                            sshCommand remote: remote, command: "docker run -d --name HelloWorld -p 8280:80 javasampletomcat:latest"                                 
                                   
                }
             }
         }       
    }
}
